{"version":3,"sources":["../../src/pages/what/what.module.ts","../../src/pages/what/what.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACd;AAUlC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAR1B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uDAAQ;aACT;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,uDAAQ,CAAC;aACnC;SACF,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;ACZe;AACkC;AACV;AAElE;;;;;GAKG;AAOH;IASE,kBACS,OAAsB,EACtB,SAAoB,EACpB,eAAgC,EAChC,WAA8B;QAH9B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAmB;QAXvC,WAAW;QACX,cAAS,GAAG,EAAE,CAAC;QACf,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,KAAK,CAAC;QAElB,cAAS,GAAQ,EAAE,CAAC;IAQpB,CAAC;IAED,oDAAoD;IACpD,iCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;IAED,yDAAyD;IACzD,mCAAgB,GAAhB;QAAA,iBAcC;QAbC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,2FAA2F;QAE3F,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;QAC9B,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,UAAC,IAAS;YACrD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;YAC9B,kCAAkC;YAClC,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACxC,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACxC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,4BAAS,GAAT;QAAA,iBAeC;QAdC,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACrC,OAAO,EAAE,+CAA+C,CAAC,kBAAkB;SAC5E,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,EAAE,EAAC,kBAAkB;QAEnC,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC,gCAAgC;aACnE,IAAI,CAAC,UAAC,QAAY;YACjB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,6DAA6D;YACxF,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,SAAS;YACxC,MAAM,CAAC,OAAO,EAAE,EAAC,gBAAgB;QACnC,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,cAAc;YAC/B,MAAM,CAAC,OAAO,EAAE,EAAC,eAAe;QAClC,CAAC,CAAC;IACN,CAAC;IAtDU,QAAQ;QAJpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACG;SACzB,CAAC;6EAW+B;YACX,mFAAS;YACH,wEAAe;YACnB,KAAiB;OAb5B,QAAQ,CAyDpB;IAAD,CAAC;AAAA;SAzDY,QAAQ,e","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { WhatPage } from './what';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WhatPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(WhatPage),\r\n  ],\r\n})\r\nexport class WhatPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/what/what.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, LoadingController, NavController, NavParams } from 'ionic-angular';\r\nimport { ServiceProvider } from '../../providers/service/service';\r\n\r\n/**\r\n * Generated class for the WhatPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-what',\r\n  templateUrl: 'what.html',\r\n})\r\nexport class WhatPage {\r\n\r\n  // variabel\r\n  informasi = \"\";\r\n  erroMessage = \"\";\r\n  isLoading = false;\r\n\r\n  DATA_WHAT: any = \"\";\r\n\r\n  constructor(\r\n    public navCtrl: NavController, \r\n    public navParams: NavParams, \r\n    public serviceProvider: ServiceProvider,\r\n    public loadingCtrl: LoadingController) {\r\n    \r\n  }\r\n\r\n  // dijalani pada saat pertama masuk pada halaman ini\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad WhatPage');\r\n  }\r\n\r\n  // fungsi ini dijalani setiap masuk halaman yg dituju how\r\n  ionViewWillEnter() {\r\n    console.log('will enter')\r\n    // this.ambilData(); // panggil fungsi untuk di jalanin pada saat setiap masuk halaman what\r\n    \r\n    this.serviceProvider.LOADER();\r\n    this.serviceProvider.retrieveWhatData().then((data: any) => {\r\n      this.DATA_WHAT = data.content;\r\n      // console.log('Data What', data);\r\n      this.serviceProvider.Loader.dismiss();\r\n    }, err => {\r\n      console.log(err);\r\n      this.serviceProvider.Loader.dismiss();\r\n    });\r\n\r\n  }\r\n\r\n  ambilData() {\r\n    const loader = this.loadingCtrl.create({ // function loading => contohnya dari sini https://ionicframework.com/docs/v3/components/#loading\r\n      content: \"Tunggu ya... USE sedang menyiapkan datanya :)\" // content loading\r\n    });\r\n    loader.present() // jalanin loading\r\n    \r\n    this.serviceProvider.getInformation() // panggil function dari service\r\n      .then((response:any) => { // ini adalah callbacknya. datanya di disimpan dulu di variabel 'response'\r\n        this.informasi = response; // data yang ada di var response di set ke variabel informasi\r\n        console.log('data', response); // debug \r\n        loader.dismiss() // tutup loading\r\n      }, err => {\r\n        console.log(err) // debug error\r\n        loader.dismiss() // tutup loadng\r\n      })\r\n  }\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/what/what.ts"],"sourceRoot":""}